version: 2.1
executors:
  docker-publisher:
    environment:
      IMAGE_NAME: orthanc2/pelican
    docker:
    - image: circleci/buildpack-deps:stretch
jobs:
  build:
    executor: docker-publisher
    steps:
    - checkout
    - run:
        name: Checkout Pelican Plugins
        command: |
          git clone 'https://github.com/getpelican/pelican-plugins.git' pelican-plugins
    - setup_remote_docker
    - run:
        name: Build Docker image
        command: docker build -t $IMAGE_NAME:latest .
    - run:
        name: Archive Docker image
        command: docker save -o image.tar $IMAGE_NAME
    - persist_to_workspace:
        root: .
        paths:
        - ./image.tar
  publish-latest:
    executor: docker-publisher
    steps:
    - setup_remote_docker
    - attach_workspace:
        at: /tmp/workspace
    - run:
        name: Load archived Docker image
        command: docker load -i /tmp/workspace/image.tar
    - run:
        name: Calculate Tag Names
        command: |
          PYTHON_VERSION="$(docker run --rm $IMAGE_NAME python --version | sed -e 's/^Python //')"
          PYTHON_MINOR_VERSION="${PYTHON_VERSION%.*}"
          PYTHON_MAJOR_VERSION="${PYTHON_MINOR_VERSION%.*}"
          PELICAN_VERSION="$(docker run --rm $IMAGE_NAME pelican --version)"
          PELICAN_MINOR_VERSION="${PELICAN_VERSION%.*}"
          PELICAN_MAJOR_VERSION="${PELICAN_MINOR_VERSION%.*}"

          echo "export FULL_VERSION_TAG_NAME='pelican-${PELICAN_VERSION}_python-${PYTHON_VERSION}_build-${CIRCLE_BUILD_NUM}'" >> $BASH_ENV
          echo "export MINOR_VERSION_TAG_NAME='pelican-${PELICAN_MINOR_VERSION}_python-${PYTHON_MINOR_VERSION}'" >> $BASH_ENV
          echo "export MAJOR_VERSION_TAG_NAME='pelican-${PELICAN_MAJOR_VERSION}_python-${PYTHON_MAJOR_VERSION}'" >> $BASH_ENV
    - run:
        name: Publish Docker Image to Docker Hub
        command: |
          docker tag $IMAGE_NAME:latest $IMAGE_NAME:$FULL_VERSION_TAG_NAME
          docker tag $IMAGE_NAME:latest $IMAGE_NAME:$MINOR_VERSION_TAG_NAME
          docker tag $IMAGE_NAME:latest $IMAGE_NAME:$MAJOR_VERSION_TAG_NAME

          echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
          docker push $IMAGE_NAME:$FULL_VERSION_TAG_NAME
          docker push $IMAGE_NAME:$MINOR_VERSION_TAG_NAME
          docker push $IMAGE_NAME:$MAJOR_VERSION_TAG_NAME
          docker push $IMAGE_NAME:latest
workflows:
  build-master:
    jobs:
    - build:
        filters:
          branches:
            only: master
    - publish-latest:
        context: docker-publishing
        requires:
        - build
        filters:
          branches:
            only: master
  weekly-build:
    triggers:
    - schedule:
        cron: 0 19 * * 6
        filters:
          branches:
            only: master
    jobs:
    - build:
        filters:
          branches:
            only: master
    - publish-latest:
        context: docker-publishing
        requires:
        - build
        filters:
          branches:
            only: master
